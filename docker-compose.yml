services:
  db:
    image: mysql:8.0
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: test-tidelit
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p123"]
      interval: 5s
      retries: 10
      start_period: 20s

  php:
    build:
      context: ./backend
    container_name: php
    environment:
      MYSQL_ROOT_PASSWORD: 123
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    ports:
      - "9000:9000"

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/backend
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - app-network

  node:
    image: node:22
    container_name: node
    working_dir: /var/www/frontend
    volumes:
      - ./frontend:/var/www/frontend
      - ./frontend/.env:/var/www/frontend/.env
    command: bash -c "npm install && npm run dev -- --host 0.0.0.0"
    ports:
      - "5173:5173"
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
